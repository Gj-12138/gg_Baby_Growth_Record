# Generated by Django 5.2.7 on 2025-10-14 02:09

import ckeditor.fields
import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=500, verbose_name='评论内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='评论时间')),
                ('like_count', models.PositiveIntegerField(db_index=True, default=0, verbose_name='点赞数')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='是否软删除')),
            ],
            options={
                'verbose_name': '文章评论',
                'verbose_name_plural': '文章评论',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='标题')),
                ('content', ckeditor.fields.RichTextField(verbose_name='文章分享')),
                ('created_articles', models.DateTimeField(default=django.utils.timezone.now, verbose_name='发表时间')),
                ('updated_articles', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('state', models.IntegerField(choices=[(-1, '拒绝'), (0, '未审核'), (1, '通过')], default=0, verbose_name='审核状态')),
            ],
            options={
                'verbose_name': '社区分享',
                'verbose_name_plural': '社区分享',
                'ordering': ['-created_articles'],
            },
        ),
        migrations.CreateModel(
            name='BabyParent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('father', '爸爸'), ('mother', '妈妈'), ('grandpa', '爷爷'), ('grandma', '奶奶'), ('paternal_aunt', '外婆'), ('maternal_aunt', '外公'), ('other', '其他')], default='other', max_length=20, verbose_name='身份')),
                ('is_primary', models.BooleanField(default=False, verbose_name='是否主要监护人')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='绑定时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '家长关系',
                'verbose_name_plural': '家长关系',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification', models.CharField(max_length=50, unique=True, verbose_name='分类名')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
            },
        ),
        migrations.CreateModel(
            name='CheckupRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('checkup_date', models.DateField(verbose_name='体检日期')),
                ('institution', models.CharField(max_length=150, verbose_name='体检机构')),
                ('doctor', models.CharField(blank=True, max_length=50, verbose_name='医生')),
                ('summary', models.TextField(blank=True, verbose_name='体检总结')),
                ('details', models.JSONField(blank=True, null=True, verbose_name='详细数据')),
                ('suggestions', models.TextField(blank=True, verbose_name='医生建议')),
                ('next_checkup_date', models.DateField(blank=True, null=True, verbose_name='下次体检日期')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='录入时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '体检记录',
                'verbose_name_plural': '体检记录',
                'ordering': ['-checkup_date'],
            },
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '收藏夹',
                'verbose_name_plural': '收藏夹',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, verbose_name='事件标题')),
                ('happen_date', models.DateField(db_index=True, verbose_name='发生日期')),
                ('description', models.TextField(blank=True, verbose_name='详细描述')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='记录时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '里程碑事件',
                'verbose_name_plural': '里程碑事件',
                'ordering': ['-happen_date'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '点赞',
                'verbose_name_plural': '点赞',
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('height', models.DecimalField(decimal_places=1, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='身高(cm)')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='体重(kg)')),
                ('head_circumference', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='头围(cm)')),
                ('chest_circumference', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='胸围(cm)')),
                ('measure_date', models.DateField(db_index=True, default=django.utils.timezone.now, verbose_name='测量日期')),
                ('notes', models.CharField(blank=True, max_length=200, verbose_name='备注')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='录入时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '身高体重记录',
                'verbose_name_plural': '身高体重记录',
                'ordering': ['-measure_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicationRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('disease', models.CharField(blank=True, max_length=100, verbose_name='病症')),
                ('medicine_name', models.CharField(max_length=100, verbose_name='药物名称')),
                ('dosage', models.CharField(max_length=50, verbose_name='剂量')),
                ('frequency', models.CharField(blank=True, help_text='如:每日3次', max_length=50, verbose_name='频次')),
                ('administration_time', models.DateTimeField(verbose_name='用药时间')),
                ('route', models.CharField(blank=True, help_text='如:口服、外用', max_length=50, verbose_name='给药途径')),
                ('doctor_advice', models.TextField(blank=True, verbose_name='医嘱')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='记录时间')),
            ],
            options={
                'verbose_name': '用药记录',
                'verbose_name_plural': '用药记录',
                'ordering': ['-administration_time'],
            },
        ),
        migrations.CreateModel(
            name='MilestoneType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='类型名称')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '里程碑类型',
                'verbose_name_plural': '里程碑类型',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='baby_media/', verbose_name='文件')),
                ('media_type', models.CharField(choices=[('photo', '照片'), ('video', '视频')], default='photo', max_length=10, verbose_name='媒体类型')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='baby_media_thumb/', verbose_name='缩略图')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='描述')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='拍摄地点')),
                ('shot_at', models.DateTimeField(blank=True, null=True, verbose_name='拍摄时间')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='上传时间')),
            ],
            options={
                'verbose_name': '照片/视频',
                'verbose_name_plural': '照片/视频',
                'ordering': ['-shot_at', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='请输入简短标题（如“宝宝第一次吃辅食”）', max_length=100, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('category', models.CharField(choices=[('daily', '日常记录'), ('health', '健康记录'), ('development', '发育记录'), ('feeding', '喂养记录'), ('sleep', '睡眠记录'), ('other', '其他')], db_index=True, default='daily', max_length=20, verbose_name='分类')),
                ('voice', models.FileField(blank=True, null=True, upload_to='voice', verbose_name='语音文件')),
                ('record_date', models.DateField(db_index=True, default=django.utils.timezone.now, help_text='记录发生的实际日期（非创建日期，便于按时间轴查看）', verbose_name='记录日期')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '成长记录',
                'verbose_name_plural': '成长记录',
                'ordering': ['-record_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=15, unique=True, verbose_name='标签名')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='疫苗名称')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='编码')),
                ('category', models.CharField(blank=True, help_text='如:一类疫苗、二类疫苗', max_length=50, verbose_name='疫苗类别')),
                ('shot_age_days_start', models.PositiveSmallIntegerField(default=0, verbose_name='推荐接种起始日龄')),
                ('shot_age_days_end', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='推荐接种截止日龄')),
                ('dose', models.PositiveSmallIntegerField(default=1, verbose_name='剂次')),
                ('interval_days', models.PositiveSmallIntegerField(default=0, help_text='与上一剂的间隔天数', verbose_name='间隔天数')),
                ('description', models.TextField(blank=True, verbose_name='说明')),
                ('contraindication', models.TextField(blank=True, verbose_name='禁忌症')),
                ('side_effects', models.TextField(blank=True, verbose_name='不良反应')),
            ],
            options={
                'verbose_name': '疫苗',
                'verbose_name_plural': '疫苗',
                'ordering': ['shot_age_days_start', 'name', 'dose'],
            },
        ),
        migrations.CreateModel(
            name='VaccineRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shot_date', models.DateField(verbose_name='接种日期')),
                ('batch_number', models.CharField(blank=True, max_length=50, verbose_name='疫苗批号')),
                ('hospital', models.CharField(blank=True, max_length=150, verbose_name='接种点')),
                ('doctor', models.CharField(blank=True, max_length=50, verbose_name='接种医生')),
                ('reaction', models.TextField(blank=True, verbose_name='不良反应')),
                ('next_shot_date', models.DateField(blank=True, null=True, verbose_name='下次接种日期')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='录入时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '接种记录',
                'verbose_name_plural': '接种记录',
                'ordering': ['shot_date'],
            },
        ),
    ]
