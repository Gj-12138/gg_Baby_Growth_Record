# Generated by Django 5.2.7 on 2025-10-11 08:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机号')),
                ('avatar', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='user/avatars', verbose_name='头像')),
                ('is_parent', models.BooleanField(default=True, verbose_name='是否是家长')),
                ('is_vip', models.BooleanField(default=False, verbose_name='是否是VIP')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Baby',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('nickname', models.CharField(blank=True, max_length=50, verbose_name='小名')),
                ('gender', models.CharField(choices=[('M', '男'), ('F', '女'), ('U', '保密')], default='U', max_length=1, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('birth_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, verbose_name='出生体重(kg)')),
                ('birth_height', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='出生身高(cm)')),
                ('gestational_age', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='出生孕周(周)')),
                ('blood_type', models.CharField(blank=True, max_length=5, verbose_name='血型')),
                ('allergies', models.TextField(blank=True, verbose_name='过敏史')),
                ('avatar', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='baby/avatars', verbose_name='头像')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注信息')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_deleted', models.BooleanField(default=False)),
                ('parents', models.ManyToManyField(related_name='babies', through='main.BabyParent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '宝宝档案',
                'verbose_name_plural': '宝宝档案',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_vip'], name='users_user_is_vip_6b3464_idx'),
        ),
        migrations.AddIndex(
            model_name='baby',
            index=models.Index(fields=['birthday'], name='users_baby_birthda_cedca0_idx'),
        ),
        migrations.AddIndex(
            model_name='baby',
            index=models.Index(fields=['created_at', 'is_deleted'], name='users_baby_created_23408f_idx'),
        ),
    ]
